\name{lacf.calc}
\alias{lacf.calc}
\title{
Compute localised autocovariance estimate from spectrum estimate.~
}
\description{
Computes the local autocovariance and autocorrelation estimates, given an input of a spectrum estimate. Provides the same functionality as the function \code{lacf} from the locits package, but user provides the spectrum estimate in the argument.
}
\usage{
lacf.calc(x, filter.number = 10, family = "DaubLeAsymm",
                      spec.est, lag.max = NULL)
}
\arguments{
\item{x}{
	The time series you wish to analyse.
}
\item{filter.number}{
  Wavelet filter number that generated the time series.
}
\item{family}{
Wavelet family that generated the time series.
}
\item{spec.est}{
Estiamted spectrum from which the lacf estimate will be calculated.
}
\item{lag.max}{
The maximum lag of acf required. If NULL then the same default as in the regular acf function is used.
}

}
\value{
An object of class \code{lacf} which contains the autocovariance.
}

\author{
E T McGonigle
}

\seealso{

\code{\link{lacf}}

}
\examples{
##---- computes estimate of local autocovariance function using the ewspec.trend
##---- function to compute the spectral estimate

##---- example where LSW process is generated using the Haar wavelet

spec = wavethresh::cns(512)
spec = wavethresh::putD(spec, level = 8, 1+sin(seq(from = 0, to = 2*pi,length = 512))^2)

noise = wavethresh::LSWsim(spec)
trend = seq(from = 0, to = 10,length = 512)

x = trend+noise

##---- first estimate the spectrum using Daubechies EP4 wavelet:

spec.est = ewspec.trend(x, an.filter.number = 4, an.family = "DaubExPhase",
gen.filter.number = 1, gen.family = "DaubExPhase")

#---- estimate the lacf specifying the Haar wavelet as the generating wavelet

lacf.est = lacf.calc(x = x, filter.number = 1, family = "DaubExPhase", spec.est = spec.est$S)

plot.ts(lacf.est$lacf[,1])
}


